'use client';

import { useState, useEffect } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import { 
  Heart, 
  MessageCircle, 
  Share, 
  MapPin, 
  Clock, 
  User,
  ArrowLeft,
  Filter,
  Search,
  Calendar,
  Star
} from 'lucide-react';
import Link from 'next/link';

interface FeedPost {
  id: string;
  type: 'TASK_COMPLETED' | 'NEW_ACHIEVEMENT' | 'COMMUNITY_HIGHLIGHT' | 'TIPS';
  title: string;
  content: string;
  author: {
    id: string;
    name: string;
    avatar: string;
    userType: string;
  };
  createdAt: string;
  likes: number;
  comments: number;
  shares: number;
  image?: string;
  tags: string[];
  location?: string;
  taskDetails?: {
    title: string;
    category: string;
    hours: number;
    rating: number;
  };
}

export default function Feed() {
  const { user, loading } = useAuth();
  const router = useRouter();
  const [posts, setPosts] = useState<FeedPost[]>([]);
  const [filter, setFilter] = useState<'ALL' | 'TASK_COMPLETED' | 'ACHIEVEMENT' | 'COMMUNITY'>('ALL');
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    if (!loading && !user) {
      router.push('/login');
    }
    if (user) {
      loadFeedPosts();
    }
  }, [user, loading, router]);

  const loadFeedPosts = async () => {
    try {
      // Mock data for demo
      const mockPosts: FeedPost[] = [
        {
          id: '1',
          type: 'TASK_COMPLETED',
          title: '‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏û‡∏≤‡πÑ‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
          content: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏≤‡∏¢‡πÑ‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô',
          author: {
            id: 'student-1',
            name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
            avatar: 'üë®‚Äçüéì',
            userType: 'STUDENT'
          },
          createdAt: '2024-01-20T10:30:00Z',
          likes: 24,
          comments: 8,
          shares: 3,
          image: 'üè•',
          tags: ['‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•', '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', '‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'],
          location: '‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
          taskDetails: {
            title: '‡∏û‡∏≤‡πÑ‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
            category: '‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
            hours: 3,
            rating: 5
          }
        },
        {
          id: '2',
          type: 'NEW_ACHIEVEMENT',
          title: '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏´‡∏°‡πà: ‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤ 10 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á! üèÜ',
          content: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏™‡∏°‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤‡πÑ‡∏î‡πâ 10 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡πâ‡∏≤‡∏ß‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ',
          author: {
            id: 'system',
            name: 'GenMatch System',
            avatar: 'ü§ñ',
            userType: 'SYSTEM'
          },
          createdAt: '2024-01-19T16:45:00Z',
          likes: 45,
          comments: 12,
          shares: 7,
          tags: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤', '10 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á']
        },
        {
          id: '3',
          type: 'COMMUNITY_HIGHLIGHT',
          title: '‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏î‡∏µ‡πÜ ‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô: ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏¢‡∏≤‡∏°‡∏ß‡∏¥‡∏Å‡∏§‡∏ï',
          content: '‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏ô‡πâ‡∏≥‡∏ó‡πà‡∏ß‡∏°‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏≤‡∏á‡∏ô‡∏≤ ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏†‡∏±‡∏¢ ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏Å‡πà‡∏ï‡∏±‡∏ß',
          author: {
            id: 'community',
            name: '‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ö‡∏≤‡∏á‡∏ô‡∏≤',
            avatar: 'üèòÔ∏è',
            userType: 'COMMUNITY'
          },
          createdAt: '2024-01-18T14:20:00Z',
          likes: 89,
          comments: 23,
          shares: 15,
          image: 'üåä',
          tags: ['‡∏ä‡∏∏‡∏°‡∏ä‡∏ô', '‡∏ô‡πâ‡∏≥‡∏ó‡πà‡∏ß‡∏°', '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤'],
          location: '‡∏ö‡∏≤‡∏á‡∏ô‡∏≤, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'
        },
        {
          id: '4',
          type: 'TIPS',
          title: '‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ: ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏',
          content: '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡∏û‡∏π‡∏î‡∏ä‡πâ‡∏≤‡πÜ ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û‡πÄ‡∏™‡∏°‡∏≠',
          author: {
            id: 'expert-1',
            name: '‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏≠‡∏™‡∏°‡∏®‡∏£‡∏µ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç',
            avatar: 'üë©‚Äç‚öïÔ∏è',
            userType: 'EXPERT'
          },
          createdAt: '2024-01-17T11:15:00Z',
          likes: 67,
          comments: 18,
          shares: 9,
          tags: ['‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö', '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£', '‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏', '‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤']
        },
        {
          id: '5',
          type: 'TASK_COMPLETED',
          title: '‡∏ä‡πà‡∏ß‡∏¢‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏•‡∏∏‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üíª',
          content: '‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏•‡∏∏‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏•‡∏∏‡∏á',
          author: {
            id: 'student-2',
            name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏î‡∏µ',
            avatar: 'üë©‚Äçüéì',
            userType: 'STUDENT'
          },
          createdAt: '2024-01-16T15:30:00Z',
          likes: 31,
          comments: 6,
          shares: 2,
          image: 'üíª',
          tags: ['‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°', '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå', '‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'],
          location: '‡∏ö‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏•‡∏∏‡∏á, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
          taskDetails: {
            title: '‡∏ä‡πà‡∏ß‡∏¢‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
            category: '‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°',
            hours: 2,
            rating: 5
          }
        }
      ];
      
      setPosts(mockPosts);
    } catch (error) {
      console.error('Failed to load feed posts:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const getPostIcon = (type: string) => {
    switch (type) {
      case 'TASK_COMPLETED': return '‚úÖ';
      case 'NEW_ACHIEVEMENT': return 'üèÜ';
      case 'COMMUNITY_HIGHLIGHT': return 'üåü';
      case 'TIPS': return 'üí°';
      default: return 'üìù';
    }
  };

  const getPostColor = (type: string) => {
    switch (type) {
      case 'TASK_COMPLETED': return 'from-green-500 to-emerald-500';
      case 'NEW_ACHIEVEMENT': return 'from-yellow-500 to-orange-500';
      case 'COMMUNITY_HIGHLIGHT': return 'from-blue-500 to-indigo-500';
      case 'TIPS': return 'from-purple-500 to-pink-500';
      default: return 'from-gray-500 to-gray-600';
    }
  };

  const getPostTypeLabel = (type: string) => {
    switch (type) {
      case 'TASK_COMPLETED': return '‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô';
      case 'NEW_ACHIEVEMENT': return '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏´‡∏°‡πà';
      case 'COMMUNITY_HIGHLIGHT': return '‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏ä‡∏∏‡∏°‡∏ä‡∏ô';
      case 'TIPS': return '‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö';
      default: return '‡πÇ‡∏û‡∏™‡∏ï‡πå';
    }
  };

  const filteredPosts = posts.filter(post => {
    if (filter === 'ALL') return true;
    if (filter === 'TASK_COMPLETED') return post.type === 'TASK_COMPLETED';
    if (filter === 'ACHIEVEMENT') return post.type === 'NEW_ACHIEVEMENT';
    if (filter === 'COMMUNITY') return post.type === 'COMMUNITY_HIGHLIGHT';
    return true;
  });

  if (loading) {
    return (
      <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-purple-900 via-pink-900 to-purple-900">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-pink-400 mx-auto"></div>
          <p className="mt-4 text-lg text-white">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-purple-900">
      {/* Header */}
      <div className="glass-card mx-4 mt-4 p-6">
        <div className="flex items-center justify-between">
          <Link href="/dashboard" className="text-white hover:text-pink-300 transition-colors">
            <ArrowLeft className="w-5 h-5 inline mr-2" />
            ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
          </Link>
          <h1 className="text-3xl font-bold text-white">‡∏ü‡∏µ‡∏î‡∏ä‡∏∏‡∏°‡∏ä‡∏ô</h1>
          <div className="flex items-center space-x-2">
            <Heart className="w-6 h-6 text-pink-400" />
            <span className="text-white/70">‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£</span>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto py-6 px-4">
        {/* Filters */}
        <div className="glass-card p-4 mb-6">
          <div className="flex justify-center">
            <div className="flex bg-white/10 rounded-lg p-1">
              {[
                { key: 'ALL', label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', count: posts.length },
                { key: 'TASK_COMPLETED', label: '‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', count: posts.filter(p => p.type === 'TASK_COMPLETED').length },
                { key: 'ACHIEVEMENT', label: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', count: posts.filter(p => p.type === 'NEW_ACHIEVEMENT').length },
                { key: 'COMMUNITY', label: '‡∏ä‡∏∏‡∏°‡∏ä‡∏ô', count: posts.filter(p => p.type === 'COMMUNITY_HIGHLIGHT').length }
              ].map((tab) => (
                <button
                  key={tab.key}
                  onClick={() => setFilter(tab.key as any)}
                  className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${
                    filter === tab.key
                      ? 'bg-pink-500 text-white shadow-lg'
                      : 'text-white/70 hover:text-white hover:bg-white/10'
                  }`}
                >
                  {tab.label} ({tab.count})
                </button>
              ))}
            </div>
          </div>
        </div>

        {/* Feed Posts */}
        {isLoading ? (
          <div className="glass-card p-12 text-center">
            <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-pink-400 mx-auto mb-4"></div>
            <p className="text-white">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏µ‡∏î...</p>
          </div>
        ) : filteredPosts.length === 0 ? (
          <div className="glass-card p-12 text-center">
            <div className="w-20 h-20 bg-white/10 rounded-full flex items-center justify-center mx-auto mb-4">
              <Heart className="w-10 h-10 text-white/40" />
            </div>
            <h3 className="text-xl font-semibold text-white mb-2">‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå</h3>
            <p className="text-white/60">
              {filter === 'ALL' 
                ? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô' 
                : `‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "${filter}"`
              }
            </p>
          </div>
        ) : (
          <div className="space-y-6">
            {filteredPosts.map((post) => (
              <div key={post.id} className="glass-card p-6 hover:scale-105 transition-transform">
                {/* Post Header */}
                <div className="flex items-start gap-4 mb-4">
                  <div className={`w-12 h-12 bg-gradient-to-r ${getPostColor(post.type)} rounded-xl flex items-center justify-center text-2xl`}>
                    {post.image || getPostIcon(post.type)}
                  </div>
                  
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-1">
                      <span className={`px-2 py-1 rounded-full text-xs font-medium bg-gradient-to-r ${getPostColor(post.type)} text-white`}>
                        {getPostTypeLabel(post.type)}
                      </span>
                      {post.location && (
                        <div className="flex items-center text-white/60 text-xs">
                          <MapPin className="w-3 h-3 mr-1" />
                          {post.location}
                        </div>
                      )}
                    </div>
                    
                    <h3 className="text-lg font-semibold text-white mb-2">{post.title}</h3>
                    
                    <div className="flex items-center text-white/60 text-sm">
                      <User className="w-4 h-4 mr-2" />
                      {post.author.name}
                      <span className="mx-2">‚Ä¢</span>
                      <Calendar className="w-4 h-4 mr-1" />
                      {new Date(post.createdAt).toLocaleDateString('th-TH')}
                    </div>
                  </div>
                </div>

                {/* Post Content */}
                <p className="text-white/80 mb-4 leading-relaxed">{post.content}</p>

                {/* Task Details (if applicable) */}
                {post.taskDetails && (
                  <div className="bg-white/10 rounded-lg p-4 mb-4">
                    <h4 className="text-white font-medium mb-2">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</h4>
                    <div className="grid grid-cols-2 gap-4 text-sm">
                      <div>
                        <span className="text-white/60">‡∏ä‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô:</span>
                        <span className="text-white ml-2">{post.taskDetails.title}</span>
                      </div>
                      <div>
                        <span className="text-white/60">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</span>
                        <span className="text-white ml-2">{post.taskDetails.category}</span>
                      </div>
                      <div>
                        <span className="text-white/60">‡πÄ‡∏ß‡∏•‡∏≤:</span>
                        <span className="text-white ml-2">{post.taskDetails.hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</span>
                      </div>
                      <div>
                        <span className="text-white/60">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:</span>
                        <div className="flex items-center ml-2">
                          <Star className="w-4 h-4 text-yellow-400 mr-1" />
                          <span className="text-white">{post.taskDetails.rating}/5</span>
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {/* Tags */}
                {post.tags.length > 0 && (
                  <div className="flex flex-wrap gap-2 mb-4">
                    {post.tags.map((tag, index) => (
                      <span
                        key={index}
                        className="px-3 py-1 bg-white/10 text-white/70 rounded-full text-xs"
                      >
                        #{tag}
                      </span>
                    ))}
                  </div>
                )}

                {/* Post Actions */}
                <div className="flex items-center justify-between pt-4 border-t border-white/20">
                  <div className="flex items-center space-x-6">
                    <button className="flex items-center text-white/70 hover:text-pink-400 transition-colors">
                      <Heart className="w-5 h-5 mr-2" />
                      {post.likes}
                    </button>
                    
                    <button className="flex items-center text-white/70 hover:text-blue-400 transition-colors">
                      <MessageCircle className="w-5 h-5 mr-2" />
                      {post.comments}
                    </button>
                    
                    <button className="flex items-center text-white/70 hover:text-green-400 transition-colors">
                      <Share className="w-5 h-5 mr-2" />
                      {post.shares}
                    </button>
                  </div>
                  
                  <div className="text-white/50 text-xs">
                    {new Date(post.createdAt).toLocaleTimeString('th-TH', {
                      hour: '2-digit',
                      minute: '2-digit'
                    })}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Quick Actions */}
        <div className="glass-card p-6 mt-8">
          <h3 className="text-lg font-semibold text-white mb-4">‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô</h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Link href="/add-task" className="glass-button-secondary p-4 text-center hover:scale-105 transition-transform">
              <div className="w-12 h-12 bg-gradient-to-r from-pink-500 to-purple-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                <Heart className="w-6 h-6 text-white" />
              </div>
              <h4 className="text-white font-semibold mb-2">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</h4>
              <p className="text-white/70 text-sm">‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠</p>
            </Link>
            
            <Link href="/search" className="glass-button-secondary p-4 text-center hover:scale-105 transition-transform">
              <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                <Search className="w-6 h-6 text-white" />
              </div>
              <h4 className="text-white font-semibold mb-2">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô</h4>
              <p className="text-white/70 text-sm">‡∏´‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</p>
            </Link>
            
            <Link href="/achievements" className="glass-button-secondary p-4 text-center hover:scale-105 transition-transform">
              <div className="w-12 h-12 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-xl flex items-center justify-center mx-auto mb-3">
                <Star className="w-6 h-6 text-white" />
              </div>
              <h4 className="text-white font-semibold mb-2">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h4>
              <p className="text-white/70 text-sm">‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</p>
            </Link>
          </div>
        </div>
      </div>
    </div>
  );
}
